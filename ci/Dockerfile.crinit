ARG REPO
ARG UBUNTU_RELEASE
FROM ${REPO}${REPO:+/}ubuntu:${UBUNTU_RELEASE}

ARG USER=ci
ARG UID=1000
ARG GID=1000

ARG TARGET_USER_NAME=target
ARG TARGET_PASSWORD=target123

ARG EB_GIT_SOURCES=https://github.com/Elektrobit/

ARG SAMCONF_REPO_NAME=samconf.git
ARG SAMCONF_REPO_PATH=${EB_GIT_SOURCES}/${SAMCONF_REPO_NAME}
ARG SAMCONF_REPO_REF=main

ARG SAFU_REPO_NAME=safu.git
ARG SAFU_REPO_PATH=${EB_GIT_SOURCES}/${SAFU_REPO_NAME}
ARG SAFU_REPO_REF=main

ARG ELOS_REPO_NAME=elos.git
ARG ELOS_REPO_PATH=${EB_GIT_SOURCES}/${ELOS_REPO_NAME}
ARG ELOS_REPO_REF=main

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
 && apt-get install -y sudo vim locales uuid-runtime keyutils \
 build-essential binutils-dev pkg-config cmake valgrind strace \
 git wget curl netcat net-tools ssh libssl-dev openssl re2c strace \
 libjson-c-dev libmnl-dev libsqlite3-0 libsqlite3-dev libesmtp-dev expat liblog4c-dev \
 libmbedtls-dev \
 && rm -rf /var/lib/apt/lists/*

RUN locale-gen en_US.UTF-8 \
 && locale-gen de_DE.UTF-8 \
 && groupadd -g $GID -o ci \
 && useradd -m -u $UID -g $GID -o -s /bin/bash $USER \
 && echo "$USER ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

WORKDIR /home/crinit
COPY ./ /home/crinit

RUN git clean -dfx /home/crinit

# Install safu
RUN git clone ${SAFU_REPO_PATH} \
 && cmake -B ${SAFU_REPO_NAME%.*}/build ./${SAFU_REPO_NAME%.*} \
 -DUNIT_TESTS=OFF \
 -DSAFU_MOCK_LIBRARY=Off \
 -DCMAKE_BUILD_TYPE=Release \
 -DENABLE_ANALYZER=Off \
 -DCMAKE_INSTALL_PREFIX=/usr \
 && make -C ${SAFU_REPO_NAME%.*}/build install

# Install samconf
RUN git clone ${SAMCONF_REPO_PATH} \
 && cmake -B ${SAMCONF_REPO_NAME%.*}/build ./${SAMCONF_REPO_NAME%.*} \
 -DUNIT_TESTS=OFF \
 -DSAMCONF_MOCK_LIBRARY=Off \
 -DCMAKE_BUILD_TYPE=Release \
 -DCMAKE_INSTALL_PREFIX=/usr \
 -DSAFU_URI=${SAFU_REPO_PATH} \
 -DSAFU_REF=${SAFU_REPO_REF} \
 && make -C ${SAMCONF_REPO_NAME%.*}/build install

# Install elos
RUN git clone ${ELOS_REPO_PATH} \
 && cmake -B ${ELOS_REPO_NAME%.*}/build ./${ELOS_REPO_NAME%.*} \
 -DUNIT_TESTS=OFF \
 -DCMAKE_BUILD_TYPE=Release \
 -DENABLE_ANALYZER=Off \
 -DCMAKE_INSTALL_PREFIX=/usr \
 -DSAMCONF_URI=${SAMCONF_REPO_PATH} \
 -DSAMCONF_REF=${SAMCONF_REPO_REF} \
 -DSAFU_URI=${SAFU_REPO_PATH} \
 -DSAFU_REF=${SAFU_REPO_REF} \
 && make -C ${ELOS_REPO_NAME%.*}/build install

# Install crinit
RUN cmake -B build . \
 -DUNIT_TESTS=Off \
 -DAPI_DOC=Off \
 -DCMAKE_BUILD_TYPE=Release \
 -DCMAKE_INSTALL_PREFIX=/usr \
 -DCMAKE_INSTALL_SYSCONFDIR=/etc \
 -DCMAKE_VERBOSE_MAKEFILE=On \
 -DINSTALL_ROBOT_TEST_RESOURCES=On \
 -DENABLE_ASAN=OFF \
 -DENABLE_ANALYZER=OFF \
 -DENABLE_WERROR=OFF \
 . \
 && make -C build install

RUN uuidgen > /etc/machine-id

RUN sudo ldconfig

RUN sudo mkdir /var/run/sshd \
 && sudo chmod 0755 /var/run/sshd \
 && sudo useradd -p $(openssl passwd -1 $TARGET_PASSWORD) --create-home --shell /bin/bash --groups sudo $TARGET_USER_NAME

EXPOSE 22
EXPOSE 54321

USER $USER
ENV LC_ALL=en_US.UTF-8
ENV DOCKERBUILD=1

WORKDIR /home/$USER

RUN echo '\n\
  sudo service ssh start\n\
' >> $HOME/.bashrc

ENTRYPOINT /bin/bash
